{"version":3,"sources":["utils/index.js","store/actions/auth.js","containers/layout/Layout.js","containers/auth/Login.js","containers/auth/Signup.js","containers/dashboard/profile/Profile.js","containers/dashboard/notifications/Notifications.js","containers/dashboard/annonces/Annonces.js","containers/dashboard/Account.js","containers/search/Search.js","containers/static-pages/StaticPage.js","containers/static-pages/StaticPageDetail.js","containers/no-match/NoMatch.js","routes.js","App.js","serviceWorker.js","index.js","store/reducers/auth.js","store/reducers/index.js","store/configureStore.prod.js","store/constants/index.js","store/configureStore.js"],"names":["checkHttpStatus","response","status","error","Error","statusText","axios","create","baseUrl","withCredentials","headers","Authorization","localStorage","getItem","xsrfCookieName","xsrfHeaderName","interceptors","request","use","config","Promise","reject","authLoginUserSuccess","token","console","log","setItem","expirationDate","Date","getTime","type","AUTH_LOGIN_USER_SUCCESS","payload","checkAuthTimeout","expirationTime","dispatch","setTimeout","authLogout","resetAuthLoginUserFailure","RESET_AUTH_LOGIN_USER_FAILURE","authLoginUserFailure","message","removeItem","AUTH_LOGIN_USER_FAILURE","authLoginUserRequest","AUTH_LOGIN_USER_REQUEST","AUTH_LOGOUT_USER","CustomLayout","state","theme","toggleThemes","setState","renderCopyright","copyright","getFullYear","__html","disconnect","props","logout","history","push","this","isAuthenticated","children","pathname","location","id","className","includes","to","exact","activeClassName","onClick","dangerouslySetInnerHTML","Component","withRouter","connect","auth","authActions","Login","username","password","handleChange","e","target","name","value","handleSubmit","preventDefault","login","reset","loading","statusTextClassNames","classNames","indexOf","onSubmit","onChange","placeholder","toString","disabled","isAuthenticating","post","email","then","data","key","catch","json","non_field_errors","resolve","authLoginUser","RegistrationForm","password1","password2","signupStudent","last_name","first_name","birth_date","home_phone_number","mobile_phone_number","year","cursus","faculty","res","err","authStudentSignup","signupEmployee","office","job","authEmployeeSignup","signupEnterprise","logo","company_url","address","description","authEnterpriseSignup","ProductTable","items","React","useState","sortConfig","setSortConfig","sortedItems","useMemo","sortableItems","sort","a","b","direction","requestSort","useSortableData","products","getClassNamesFor","undefined","Button","map","product","price","stock","Profile","role","aria-label","Notifications","Annonces","Account","selectedIndex","tabs","title","url","Pane","display","Tablist","marginBottom","flexBasis","marginRight","tab","index","SidebarTab","onSelect","isSelected","aria-controls","padding","background","flex","aria-labelledby","aria-hidden","path","component","Search","StaticPage","StaticPageDetail","NoMatchPage","BaseRouter","App","onTryAutoSignup","Boolean","window","hostname","match","store","configureStore","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","initialState","combineReducers","action","Object","assign","routing","routerReducer","reduxRouterMiddleware","routerMiddleware","middleware","applyMiddleware","thunk","createStore","rootReducer","module","exports","require"],"mappings":"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","file":"static/js/main.79a8b8f9.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport function checkHttpStatus(response) {\n    if (response.status >= 200 && response.status < 300) {\n        return response;\n    }\n\n    const error = new Error(response.statusText);\n    error.response = response;\n    throw error;\n}\n\nexport function parseJSON(response) {\n    return response.json();\n}\n\nexport const authAxios = axios.create({\n    baseUrl: '/',\n    withCredentials: 'true',\n    headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: `Token ${localStorage.getItem('token')}`\n    },\n    xsrfCookieName: 'csrftoken',\n    xsrfHeaderName: 'X-CSRFToken'\n})\n\nauthAxios.interceptors.request.use(config => {\n    config.headers = {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: `Token ${localStorage.getItem('token')}`\n    }\n        return config\n    }, function (error) {\n        return Promise.reject(error)\n    })\n\n","import axios from 'axios';\nimport { push } from 'react-router-redux';\n// eslint-disable-next-line\nimport { checkHttpStatus, parseJSON } from '../../utils';\nimport {\n    AUTH_LOGIN_USER_REQUEST,\n    AUTH_LOGIN_USER_FAILURE,\n    AUTH_LOGIN_USER_SUCCESS,\n    AUTH_LOGOUT_USER,\n    RESET_AUTH_LOGIN_USER_FAILURE\n} from '../constants';\n\nexport function authLoginUserSuccess(token) {\n    console.log(token)\n    localStorage.setItem('token', token);\n    const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n    localStorage.setItem('expirationDate', expirationDate);\n    return {\n        type: AUTH_LOGIN_USER_SUCCESS,\n        payload: {\n            token,\n        }\n    };\n}\n\nexport const checkAuthTimeout = expirationTime => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(authLogout())\n        }, expirationTime * 1000)\n    }\n}\n\nexport function resetAuthLoginUserFailure() {\n    return {\n        type: RESET_AUTH_LOGIN_USER_FAILURE\n    };\n}\n\nexport function authLoginUserFailure(error, message) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationDate');\n    return {\n        type: AUTH_LOGIN_USER_FAILURE,\n        payload: {\n            status: error,\n            statusText: message\n        }\n    };\n}\n\nexport function authLoginUserRequest() {\n    return {\n        type: AUTH_LOGIN_USER_REQUEST\n    };\n}\n\nexport function authLogout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationDate')\n    return {\n        type: AUTH_LOGOUT_USER\n    };\n}\n\nexport function authLogoutAndRedirect() {\n    return (dispatch, state) => {\n        dispatch(authLogout());\n        dispatch(push('/login'));\n        return Promise.resolve(); // TODO: we need a promise here because of the tests, find a better way\n    };\n}\n\nexport function authLoginUser(username, password) {\n    return (dispatch) => {\n        dispatch(authLoginUserRequest());\n        axios\n            .post('/rest-auth/login/', {\n                email: username,\n                password: password\n            })\n            .then(checkHttpStatus)\n            // .then(parseJSON)\n            .then(response => {\n                dispatch(authLoginUserSuccess(response.data.key));\n                dispatch(checkAuthTimeout(3600));\n            })\n            .catch((error) => {\n                if (error && typeof error.response !== 'undefined' && error.response.status === 401) {\n                    // Invalid authentication credentials\n                    return error.response.json().then((data) => {\n                        dispatch(authLoginUserFailure(401, data.non_field_errors[0]));\n                    });\n                } else if (error && typeof error.response !== 'undefined' && error.response.status >= 500) {\n                    // Server side error\n                    dispatch(authLoginUserFailure(500, 'A server error occurred while sending your data!'));\n                } else {\n                    // Most likely connection issues\n                    dispatch(authLoginUserFailure('Connection Error', 'An error occurred while sending your data!'));\n                }\n\n                return Promise.resolve(); // TODO: we need a promise here because of the tests, find a better way\n            });\n    };\n}\n\nexport const authEmployeeSignup = (username, email, password1, password2, last_name, first_name, birth_date, home_phone_number, mobile_phone_number, office, faculty, job) => {\n    return dispatch => {\n        dispatch(authLoginUserRequest())\n        axios\n            .post('/api-authentication/employee-registration', {\n                username: username,\n                email: email,\n                password1: password1,\n                password2: password2,\n                last_name: last_name,\n                first_name: first_name,\n                birth_date: birth_date,\n                home_phone_number: home_phone_number,\n                mobile_phone_number: mobile_phone_number,\n                office: office,\n                job: job,\n                faculty: faculty\n            })\n            .then(res => {\n                dispatch(authLoginUserSuccess(res.data.key));\n                dispatch(checkAuthTimeout(3600))\n            })\n            .catch(err => {\n                dispatch(authLoginUserFailure(401, err))\n            })\n    }\n}\n\nexport const authStudentSignup = (username, email, password1, password2, last_name, first_name, birth_date, home_phone_number, mobile_phone_number, year, cursus, faculty) => {\n    return dispatch => {\n        dispatch(authLoginUserRequest())\n        axios\n            .post('/api-authentication/student-registration', {\n                username: username,\n                email: email,\n                password1: password1,\n                password2: password2,\n                last_name: last_name,\n                first_name: first_name,\n                birth_date: birth_date,\n                home_phone_number: home_phone_number,\n                mobile_phone_number: mobile_phone_number,\n                year: year,\n                cursus: cursus,\n                faculty: faculty\n            })\n            .then(res => {\n                dispatch(authLoginUserSuccess(res.data.key));\n                dispatch(checkAuthTimeout(3600))\n            })\n            .catch(err => {\n                dispatch(authLoginUserFailure(401, err))\n            })\n    }\n}\n\nexport const authEnterpriseSignup = (username, email, password1, password2, last_name, first_name, birth_date, home_phone_number, mobile_phone_number, logo, office, company_url, address, description) => {\n    return dispatch => {\n        dispatch(authLoginUserRequest())\n        axios\n            .post('/api-authentication/enterprise-registration', {\n                username: username,\n                email: email,\n                password1: password1,\n                password2: password2,\n                last_name: last_name,\n                first_name: first_name,\n                birth_date: birth_date,\n                home_phone_number: home_phone_number,\n                mobile_phone_number: mobile_phone_number,\n                logo: logo,\n                office: office,\n                company_url: company_url,\n                address: address,\n                description: description\n            })\n            .then(res => {\n                dispatch(authLoginUserSuccess(res.data.key));\n                dispatch(checkAuthTimeout(3600))\n            })\n            .catch(err => {\n                dispatch(authLoginUserFailure(401, err))\n            })\n    }\n}\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token')\n        const user = localStorage.getItem('user')\n        if (token === undefined) {\n            dispatch(authLogout())\n        } else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'))\n            if (expirationDate <= new Date()) {\n                dispatch(authLogout())\n            } else {\n                dispatch(authLoginUserSuccess(token, user))\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000))\n            }\n        }\n    }\n}","import React, { Component } from 'react';\nimport { Link, withRouter, NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as authActions from '../../store/actions/auth';\n\nclass CustomLayout extends Component {\n  \n  state = {\n    theme: 'light-theme'\n  }\n\n  toggleThemes = () => {\n    const { theme } = this.state;\n    return (theme === 'light-theme') ? this.setState({'theme': 'dark-theme'}) : this.setState({'theme': 'light-theme'});\n  }\n  \n  renderCopyright = () => {\n    const copyright = new Date().getFullYear();\n    return {__html: `&copy; ${copyright} Dopejob`};\n  }\n\n  disconnect = () => {\n    this.props.logout();\n    this.props.history.push('/');\n  }\n\n  render() {\n      const { isAuthenticated, children, location: { pathname } } = this.props;\n      const { theme } = this.state;\n      return (\n        <div id=\"app\" className={theme}>\n          { (pathname).includes('login') || (pathname).includes('signup') ?\n          <div></div> :\n          <nav className=\"navbar\">\n              <NavLink\n                className=\"navbar__link\"\n                to=\"/\"\n              >\n                logo\n              </NavLink>\n              <NavLink\n                exact\n                activeClassName=\"navbar__link--active\"\n                className=\"navbar__link\"\n                to=\"/\"\n              >\n                Search\n              </NavLink>\n              {isAuthenticated ?\n              <NavLink\n                exact\n                activeClassName=\"navbar__link--active\"\n                className=\"navbar__link\"\n                to=\"/mon-compte/profil\"\n              >\n                Mon espace\n              </NavLink>\n              :\n              <NavLink\n                exact\n                activeClassName=\"navbar__link--active\"\n                className=\"navbar__link fl-r\"\n                to=\"/login\"\n              >\n                Se connecter\n              </NavLink>\n              }\n              {isAuthenticated ?\n              <button \n                onClick={this.disconnect}\n                className=\"navbar__link fl-r\">Se déconnecter</button>\n              :\n              <div></div>\n              }\n          </nav>\n          }\n          {children}\n          <footer className=\"footer\">\n            <ul>\n              <li><button onClick={this.toggleThemes}>Theme</button></li>\n              <li className=\"fl-l\" dangerouslySetInnerHTML={this.renderCopyright()}></li>\n              <li className=\"fl-l\"><Link to=\"/legal\" className=\"link\">Politique relative aux cookies, politique de confidentialité et conditions d'utilisation</Link></li>\n            </ul>\n          </footer>\n        </div>\n      )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: !!state.auth.isAuthenticated\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n      logout: () => dispatch(authActions.authLogout())\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CustomLayout))\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { authLoginUser, resetAuthLoginUserFailure } from '../../store/actions/auth';\n\nclass Login extends Component {\n\n    state = {\n      username: '',\n      password: ''\n    }\n\n    UNSAFE_componentWillMount() {\n      if (!this.props.isAuthenticated) {\n        this.props.reset()\n      }\n    }\n\n\n    handleChange = e => {\n      this.setState({ [e.target.name]: e.target.value })\n    }\n  \n    handleSubmit = e => {\n      e.preventDefault()\n      const { username, password } = this.state\n      this.props.login(username, password)\n    }\n\n    render() {\n      const { loading, isAuthenticated } = this.props;\n      const { username, password } = this.state;\n      let statusText = null;\n      if (this.props.statusText) {\n        const statusTextClassNames = classNames({\n            'alert': true,\n            'alert-danger': this.props.statusText.indexOf('Authentication Error') === 0,\n            'alert-success': this.props.statusText.indexOf('Authentication Error') !== 0\n        });\n\n        if (isAuthenticated) {\n          return <Redirect to=\"/mon-compte/profil\" />\n        }\n\n        statusText = (\n            <div className=\"row\">\n                <div className=\"col-sm-12\">\n                    <div className={statusTextClassNames}>\n                        {this.props.statusText}\n                    </div>\n                </div>\n            </div>\n        );\n      }\n      return (\n        <div className=\"container login\">\n          <h1>Connexion</h1>\n          <div>\n            {statusText}\n            <form onSubmit={this.handleSubmit}>\n              <input type=\"email\"\n                onChange={this.handleChange}\n                value={username}\n                name=\"username\"\n                placeholder=\"E-mail\"\n              />\n              <input type=\"password\"\n                onChange={this.handleChange}\n                value={password}\n                placeholder=\"Mot de passe\"\n                name=\"password\" \n              />\n\n              <button type=\"submit\"\n                loading={loading.toString()}\n                disabled={loading || isAuthenticated}\n              >\n                Connexion\n              </button>\n            </form>\n            <div>\n            Vous n’êtes pas encore membre ? <Link className=\"link\" to=\"/signup\">Créez un compte gratuitement</Link>\n            </div>\n          </div>\n        </div>\n      )\n    }\n}\n\nconst mapStateToProps = state => {\n  return {\n      loading: state.auth.loading,\n      isAuthenticated: state.auth.isAuthenticated,\n      isAuthenticating: state.auth.isAuthenticating,\n      statusText: state.auth.statusText\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n      login: (username, password) => dispatch(authLoginUser(username, password)),\n      reset: () => dispatch(resetAuthLoginUserFailure())\n  }\n}\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React, { Component } from 'react';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { authStudentSignup, authEmployeeSignup, authEnterpriseSignup, resetAuthLoginUserFailure } from '../../store/actions/auth';\n\nimport 'react-tabs/style/react-tabs.css';\n\nclass RegistrationForm extends Component {\n\n  state = {\n    email: '',\n    password1: '',\n    password2: ''\n  }\n\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  handleSubmit = e => {\n    e.preventDefault()\n    const { email, password1, password2 } = this.state\n    this.props.signupStudent(email, password1, password2)\n  }\n\n  componentWillUnmount() {\n    this.props.reset()\n  }\n\n  render() {\n    const { loading } = this.props;\n    const { email, password1, password2 } = this.state\n    let statusText = null;\n    if (this.props.statusText) {\n      const statusTextClassNames = classNames({\n        'alert': true,\n        'alert-danger': this.props.statusText.indexOf('Authentication Error') === 0,\n        'alert-success': this.props.statusText.indexOf('Authentication Error') !== 0\n      });\n\n      statusText = (\n        <div className=\"row\">\n          <div className=\"col-sm-12\">\n            <div className={statusTextClassNames}>\n              {this.props.statusText}\n            </div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"container signup\">\n      <h1>Créer un compte gratuitement</h1>\n      <Tabs>\n        <TabList>\n          <Tab>Etudiant</Tab>\n          <Tab>Employé</Tab>\n          <Tab>Entreprise</Tab>\n        </TabList>\n\n        <TabPanel>\n          <h2>Any content 1</h2>\n        </TabPanel>\n        <TabPanel>\n          <h2>Any content 2</h2>\n        </TabPanel>\n        <TabPanel>\n          <h2>Any content 3</h2>\n            <div>\n              {statusText}\n              <form onSubmit={this.handleSubmit}>\n                <input type=\"email\"\n                  onChange={this.handleChange}\n                  value={email}\n                  name=\"email\"\n                  placeholder=\"E-mail\"\n                />\n                <input type=\"password\"\n                  onChange={this.handleChange}\n                  value={password1}\n                  placeholder=\"Mot de passe\"\n                  name=\"password1\"\n                />\n                <input type=\"password\"\n                  onChange={this.handleChange}\n                  value={password2}\n                  placeholder=\"Confirmer mot de passe\"\n                  name=\"password2\"\n                />\n\n                <button type=\"submit\"\n                  loading={loading.toString()}\n                  disabled={loading}\n                >\n                  Connexion\n                  </button>\n              </form>\n              <div>\n                Vous avez un compte ? <Link to=\"/login\">Connectez-vous</Link>\n              </div>\n              <div>\n                <Link to=\"/\">Mot de passe oublié ?</Link>\n              </div>\n            </div>\n        </TabPanel>\n      </Tabs>\n      </div>\n    )\n    /* return (\n    ) */\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    isAuthenticated: state.auth.isAuthenticated,\n    isAuthenticating: state.auth.isAuthenticating,\n    statusText: state.auth.statusText\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signupStudent: (username, email, password1, password2, last_name, first_name, birth_date, home_phone_number, mobile_phone_number, year, cursus, faculty) => dispatch(authStudentSignup(username, email, password1, password2, last_name, first_name, birth_date, home_phone_number, mobile_phone_number, year, cursus, faculty)),\n\n    signupEmployee: (username, email, password1, password2, last_name, first_name, birth_date, home_phone_number, mobile_phone_number, office, faculty, job) => dispatch(authEmployeeSignup(username, email, password1, password2, last_name, first_name, birth_date, home_phone_number, mobile_phone_number, office, faculty, job)),\n\n    signupEnterprise: (username, email, password1, password2, last_name, first_name, birth_date, home_phone_number, mobile_phone_number, logo, office, company_url, address, description) => dispatch(authEnterpriseSignup(username, email, password1, password2, last_name, first_name, birth_date, home_phone_number, mobile_phone_number, logo, office, company_url, address, description)),\n    reset: () => dispatch(resetAuthLoginUserFailure())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegistrationForm);\n","import React, { Component } from 'react';\nimport { Button } from 'evergreen-ui';\n\nconst useSortableData = (items, config = null) => {\n  const [sortConfig, setSortConfig] = React.useState(config);\n\n  const sortedItems = React.useMemo(() => {\n    let sortableItems = [...items];\n    if (sortConfig !== null) {\n      sortableItems.sort((a, b) => {\n        if (a[sortConfig.key] < b[sortConfig.key]) {\n          return sortConfig.direction === 'ascending' ? -1 : 1;\n        }\n        if (a[sortConfig.key] > b[sortConfig.key]) {\n          return sortConfig.direction === 'ascending' ? 1 : -1;\n        }\n        return 0;\n      });\n    }\n    return sortableItems;\n  }, [items, sortConfig]);\n\n  const requestSort = (key) => {\n    let direction = 'ascending';\n    if (\n      sortConfig &&\n      sortConfig.key === key &&\n      sortConfig.direction === 'ascending'\n    ) {\n      direction = 'descending';\n    }\n    setSortConfig({ key, direction });\n  };\n\n  return { items: sortedItems, requestSort, sortConfig };\n};\n\nconst ProductTable = (props) => {\n  const { items, requestSort, sortConfig } = useSortableData(props.products);\n  const getClassNamesFor = (name) => {\n    if (!sortConfig) {\n      return;\n    }\n    return sortConfig.key === name ? sortConfig.direction : undefined;\n  };\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>\n            <Button \n              onClick={() => requestSort('name')}\n              className={getClassNamesFor('name')}>\n              Name\n            </Button>\n          </th>\n          <th>\n            <Button \n              onClick={() => requestSort('price')}\n              className={getClassNamesFor('price')}>\n              Price\n            </Button>\n          </th>\n          <th>\n            <Button \n              onClick={() => requestSort('stock')}\n              className={getClassNamesFor('stock')}>\n              In Stock\n            </Button>\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n      {items.map(product => (\n          <tr key={product.id}>\n            <td>{product.name}</td>\n            <td>{product.price}</td>\n            <td>{product.stock}</td>\n          </tr>\n      ))}\n      </tbody>\n    </table>\n  );\n};\n\nclass Profile extends Component {\n    render() {\n      return (\n        <div>\n          <h1>Profil</h1>\n          <ProductTable products={[ { id: 1, name: 'Cheese', price: 4.9, stock: 20 }, { id: 2, name: 'Milk', price: 1.9, stock: 32 }, { id: 3, name: 'Yoghurt', price: 2.4, stock: 12 }, { id: 4, name: 'Heavy Cream', price: 3.9, stock: 9 }, { id: 5, name: 'Butter', price: 0.9, stock: 99 }, { id: 6, name: 'Sour Cream ', price: 2.9, stock: 86 }, { id: 7, name: 'Fancy French Cheese 🇫🇷', price: 99, stock: 12 }, { id: 11, name: 'Cheese', price: 4.9, stock: 20 }, { id: 22, name: 'Milk', price: 1.9, stock: 32 }, { id: 33, name: 'Yoghurt', price: 2.4, stock: 12 }, { id: 44, name: 'Heavy Cream', price: 3.9, stock: 9 }, { id: 55, name: 'Butter', price: 0.9, stock: 99 }, { id: 66, name: 'Sour Cream ', price: 2.9, stock: 86 }, { id: 77, name: 'Fancy French Cheese 🇫🇷', price: 99, stock: 12 }, { id: 111, name: 'Cheese', price: 4.9, stock: 20 }, { id: 122, name: 'Milk', price: 1.9, stock: 32 }, { id: 133, name: 'Yoghurt', price: 2.4, stock: 12 }, { id: 144, name: 'Heavy Cream', price: 3.9, stock: 9 }, { id: 155, name: 'Butter', price: 0.9, stock: 99 }, { id: 166, name: 'Sour Cream ', price: 2.9, stock: 86 }, { id: 177, name: 'Fancy French Cheese 🇫🇷', price: 99, stock: 12 }, ]} />\n          <Button>I am using <span role=\"img\" aria-label=\"\">🌲</span> Evergreen!</Button>\n          profile\n        </div>\n      )\n    }\n  };\n  \n  export default Profile;\n","import React, { Component } from 'react';\n\nclass Notifications extends Component {\n    render() {\n      return (\n        <div>\n          <h1>Notifications</h1>\n        </div>\n      )\n    }\n  };\n  \n  export default Notifications;\n","import React, { Component } from 'react';\n\nclass Annonces extends Component {\n    render() {\n      return (\n        <div>\n          <h1>Vos Annonces</h1>\n        </div>\n      )\n    }\n  };\n  \n  export default Annonces;\n","import React, { Component } from 'react';\nimport { Link, Route, Switch } from 'react-router-dom';\n\nimport Profile from './profile/Profile';\nimport Notifications from './notifications/Notifications';\nimport Annonces from './annonces/Annonces';\n\nimport { SidebarTab, Pane, Tablist } from 'evergreen-ui';\n\nclass Account extends Component {\n\n  state = {\n    selectedIndex: null,\n    tabs: [\n      {id: 1, title:'Profil', url: '/mon-compte/profil'}, \n      {id: 2, title:'Vos annonces', url: '/mon-compte/vos-annonces'}, \n      {id: 3, title:'Notifications', url: '/mon-compte/notifications'}\n    ]\n  }\n\n  render() {\n    return (\n        <Pane display=\"flex\">\n          <Tablist marginBottom={16} flexBasis={240} marginRight={24}>\n            {this.state.tabs.map((tab, index) => (\n              <SidebarTab\n                key={tab.id}\n                id={tab.id}\n                onSelect={() => this.setState({ selectedIndex: index })}\n                isSelected={index === this.state.selectedIndex}\n                aria-controls={`panel-${tab.id}`}\n              >\n                <Link to={tab.url}>{tab.title}</Link>\n              </SidebarTab>\n            ))}\n          </Tablist>\n          <Pane padding={16} background=\"tint1\" flex=\"1\">\n            {this.state.tabs.map((tab, index) => (\n              <Pane\n                key={tab.id}\n                id={`panel-${tab.id}`}\n                role=\"tabpanel\"\n                aria-labelledby={tab.id}\n                aria-hidden={index !== this.state.selectedIndex}\n                display={index === this.state.selectedIndex ? 'block' : 'none'}\n              >\n                <Switch>\n                  <Route path=\"/mon-compte/profil\" component={Profile} />\n                  <Route path=\"/mon-compte/notifications\" component={Notifications} />\n                  <Route path=\"/mon-compte/vos-annonces\" component={Annonces} />\n                </Switch>\n              </Pane>\n            ))}\n          </Pane>\n        </Pane>\n    )\n  }\n}\n  \nexport default Account;\n","import React from 'react';\n\nfunction Search() {\n    return (\n      <div>\n          search\n      </div>\n    );\n  }\n  \n  export default Search;\n","import React from 'react';\n\nfunction StaticPage() {\n    return (\n      <div>\n          StaticPage\n      </div>\n    );\n  }\n  \n  export default StaticPage;\n","import React from 'react';\n\nfunction StaticPageDetail() {\n    return (\n      <div>\n          StaticPageDetail\n      </div>\n    );\n  }\n  \n  export default StaticPageDetail;\n","import React from 'react';\n\nfunction NoMatchPage() {\n    return (\n      <div>\n          NoMatchPage\n      </div>\n    );\n  }\n  \n  export default NoMatchPage;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Login from './containers/auth/Login';\nimport RegistrationForm from './containers/auth/Signup';\nimport Account from './containers/dashboard/Account';\nimport Search from './containers/search/Search';\nimport StaticPage from './containers/static-pages/StaticPage';\nimport StaticPageDetail from './containers/static-pages/StaticPageDetail';\nimport NoMatchPage from './containers/no-match/NoMatch';\n\nconst BaseRouter = () => (\n    <Switch>\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/signup\" component={RegistrationForm} />\n        <Route exact path=\"/legal\" component={StaticPage} />\n        <Route exact path=\"/legal/:slug\" component={StaticPageDetail} />\n        <Route path=\"/mon-compte\" component={Account} />\n        <Route exact path=\"/\" component={Search} />\n        <Route path=\"*\" component={NoMatchPage} />          \n    </Switch>\n)\n\nexport default BaseRouter;\n\n/*<Route\npath=\"/mon-compte\"\nrender={({ match: { url } }) => (\n    <>\n        <Route path={`${url}/`} component={Account} />\n        <Route path={`${url}/profil`} component={Profile} />\n        <Route path={`${url}/notifications`} component={Notifications} />\n        <Route path={`${url}/vos-annonces`} component={Annonces} />\n    </>\n)} />*/","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport CustomLayout from './containers/layout/Layout';\nimport BaseRouter from './routes'\n\nimport * as authActions from './store/actions/auth';\n\nimport './assets/styles/App.css';\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.onTryAutoSignup()\n  }\n\n  render() {\n    return (\n      <Router>\n        <CustomLayout {...this.props}>\n          <BaseRouter />\n        </CustomLayout>\n      </Router>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: !!state.auth.token\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n      onTryAutoSignup: () => dispatch(authActions.authCheckState())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/styles/index.css';\nimport { Provider } from 'react-redux'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from './store/configureStore';\n\nconst store = configureStore();\n\nconst app = (\n    <Provider store={store}>\n        <App />\n    </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {\n    AUTH_LOGIN_USER_REQUEST,\n    AUTH_LOGIN_USER_SUCCESS,\n    AUTH_LOGIN_USER_FAILURE,\n    AUTH_LOGOUT_USER,\n    RESET_AUTH_LOGIN_USER_FAILURE\n} from '../constants';\n\n// eslint-disable-next-line\nimport { updateObject } from '../utility'\n\n\nconst initialState = {\n    token: null,\n    isAuthenticated: false,\n    isAuthenticating: false,\n    statusText: null,\n    loading: false\n};\n\nexport default function authReducer(state = initialState, action) {\n    switch (action.type) {\n        case AUTH_LOGIN_USER_REQUEST:\n            return Object.assign({}, state, {\n                isAuthenticating: true,\n                statusText: null,\n                loading: true\n            });\n\n        case AUTH_LOGIN_USER_SUCCESS:\n            return Object.assign({}, state, {\n                isAuthenticating: false,\n                isAuthenticated: true,\n                token: action.payload.token,\n                statusText: 'You have been successfully logged in.',\n                loading: false\n            });\n\n        case AUTH_LOGIN_USER_FAILURE:\n            return Object.assign({}, state, {\n                isAuthenticating: false,\n                isAuthenticated: false,\n                token: null,\n                statusText: `Authentication Error: ${action.payload.status} - ${action.payload.statusText}`,\n                loading: false\n            });\n        case RESET_AUTH_LOGIN_USER_FAILURE:\n            return Object.assign({}, state, {\n                isAuthenticated: false,\n                token: null,\n                statusText: null\n            });\n        case AUTH_LOGOUT_USER:\n            return Object.assign({}, state, {\n                isAuthenticated: false,\n                token: null,\n                statusText: 'You have been successfully logged out.'\n            });\n\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from 'redux';\nimport { routerReducer } from 'react-router-redux';\nimport authReducer from './auth';\n\nexport default combineReducers({\n    auth: authReducer,\n    routing: routerReducer\n});\n","import thunk from 'redux-thunk';\nimport { applyMiddleware, createStore } from 'redux';\nimport { routerMiddleware } from 'react-router-redux';\n\nimport rootReducer from './reducers';\n\nexport default function configureStore(initialState, history) {\n    const reduxRouterMiddleware = routerMiddleware(history);\n\n    const middleware = applyMiddleware(thunk, reduxRouterMiddleware);\n\n    return createStore(rootReducer, initialState, middleware);\n}\n","export const AUTH_LOGIN_USER_REQUEST = 'AUTH_LOGIN_USER_REQUEST';\nexport const AUTH_LOGIN_USER_FAILURE = 'AUTH_LOGIN_USER_FAILURE';\nexport const AUTH_LOGIN_USER_SUCCESS = 'AUTH_LOGIN_USER_SUCCESS';\nexport const AUTH_LOGOUT_USER = 'AUTH_LOGOUT_USER';\n\nexport const RESET_AUTH_LOGIN_USER_FAILURE = 'RESET_AUTH_LOGIN_USER_FAILURE';\n","if (process.env.NODE_ENV === 'production') {\n    module.exports = require('./configureStore.prod');\n} else {\n    module.exports = require('./configureStore.dev');\n}\n"],"sourceRoot":""}